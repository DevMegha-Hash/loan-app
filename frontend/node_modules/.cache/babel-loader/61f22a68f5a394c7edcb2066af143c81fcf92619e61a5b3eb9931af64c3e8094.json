{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arnab Sardar\\\\Desktop\\\\loan-management\\\\frontend\\\\src\\\\components\\\\Profile\\\\profile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\nimport jwtDecode from \"jwt-decode\"; // To decode JWT token\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const navigate = useNavigate();\n  const [setUser] = useState(null);\n  useEffect(() => {\n    const checkUser = async () => {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        alert(\"Please log in first\");\n        navigate(\"/login\"); // Redirect to login if no token\n        return;\n      }\n      try {\n        // Decode token to get user role\n        const decoded = jwtDecode(token);\n        setUser(decoded);\n\n        // Redirect based on role\n        if (decoded.role === \"admin\") {\n          navigate(\"/admin-dashboard\");\n        } else {\n          navigate(\"/user-dashboard\");\n        }\n      } catch (err) {\n        console.error(\"Invalid token\", err);\n        alert(\"Session expired, please log in again\");\n        localStorage.removeItem(\"token\");\n        navigate(\"/login\");\n      }\n    };\n    checkUser();\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Redirecting...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 10\n  }, this);\n};\n_s(Profile, \"VGuw3VZbbIgNT4GlVXLrpEQs27g=\", false, function () {\n  return [useNavigate];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jwtDecode","jsxDEV","_jsxDEV","Profile","_s","navigate","setUser","checkUser","token","localStorage","getItem","alert","decoded","role","err","console","error","removeItem","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Arnab Sardar/Desktop/loan-management/frontend/src/components/Profile/profile.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\nimport jwtDecode from \"jwt-decode\"; // To decode JWT token\r\n\r\nconst Profile = () => {\r\n  const navigate = useNavigate();\r\n  const [ setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const checkUser = async () => {\r\n      const token = localStorage.getItem(\"token\");\r\n      if (!token) {\r\n        alert(\"Please log in first\");\r\n        navigate(\"/login\"); // Redirect to login if no token\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // Decode token to get user role\r\n        const decoded = jwtDecode(token);\r\n        setUser(decoded);\r\n\r\n        // Redirect based on role\r\n        if (decoded.role === \"admin\") {\r\n          navigate(\"/admin-dashboard\");\r\n        } else {\r\n          navigate(\"/user-dashboard\");\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Invalid token\", err);\r\n        alert(\"Session expired, please log in again\");\r\n        localStorage.removeItem(\"token\");\r\n        navigate(\"/login\");\r\n      }\r\n    };\r\n\r\n    checkUser();\r\n  }, [navigate]);\r\n\r\n  return <h2>Redirecting...</h2>;\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C;AACA,OAAOC,SAAS,MAAM,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAAEO,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEjCD,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE;QACVG,KAAK,CAAC,qBAAqB,CAAC;QAC5BN,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;QACpB;MACF;MAEA,IAAI;QACF;QACA,MAAMO,OAAO,GAAGZ,SAAS,CAACQ,KAAK,CAAC;QAChCF,OAAO,CAACM,OAAO,CAAC;;QAEhB;QACA,IAAIA,OAAO,CAACC,IAAI,KAAK,OAAO,EAAE;UAC5BR,QAAQ,CAAC,kBAAkB,CAAC;QAC9B,CAAC,MAAM;UACLA,QAAQ,CAAC,iBAAiB,CAAC;QAC7B;MACF,CAAC,CAAC,OAAOS,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,eAAe,EAAEF,GAAG,CAAC;QACnCH,KAAK,CAAC,sCAAsC,CAAC;QAC7CF,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;QAChCZ,QAAQ,CAAC,QAAQ,CAAC;MACpB;IACF,CAAC;IAEDE,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACF,QAAQ,CAAC,CAAC;EAEd,oBAAOH,OAAA;IAAAgB,QAAA,EAAI;EAAc;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAChC,CAAC;AAAClB,EAAA,CApCID,OAAO;EAAA,QACMJ,WAAW;AAAA;AAAAwB,EAAA,GADxBpB,OAAO;AAsCb,eAAeA,OAAO;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}