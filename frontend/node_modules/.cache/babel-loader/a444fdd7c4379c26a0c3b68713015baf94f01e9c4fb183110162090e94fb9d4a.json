{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arnab Sardar\\\\Desktop\\\\loan-management\\\\frontend\\\\src\\\\components\\\\Profile\\\\profile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jwtDecode } from \"jwt-decode\"; // Corrected named import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const checkUser = async () => {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        alert(\"Please log in first\");\n        navigate(\"/login\");\n        return;\n      }\n      try {\n        // Decode JWT token to get user role\n        const decoded = jwtDecode(token);\n        setUser(decoded);\n\n        // Fetch user details from the backend\n        const userRes = await axios.get(\"http://localhost:5000/api/auth/user\", {\n          headers: {\n            Authorization: token\n          }\n        });\n\n        // Redirect based on role\n        if (userRes.data.role === \"admin\") {\n          navigate(\"//admin-dashboard\");\n        } else {\n          navigate(\"/user-dashboard\");\n        }\n      } catch (err) {\n        console.error(\"Invalid token or session expired\", err);\n        alert(\"Session expired, please log in again\");\n        localStorage.removeItem(\"token\");\n        navigate(\"/login\");\n      }\n    };\n    checkUser();\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Redirecting...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 10\n  }, this);\n};\n_s(Profile, \"7CTApz3LMzC8LG1QZqzjZq1hx+k=\", false, function () {\n  return [useNavigate];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axios","jwtDecode","jsxDEV","_jsxDEV","Profile","_s","navigate","user","setUser","checkUser","token","localStorage","getItem","alert","decoded","userRes","get","headers","Authorization","data","role","err","console","error","removeItem","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Arnab Sardar/Desktop/loan-management/frontend/src/components/Profile/profile.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { jwtDecode } from \"jwt-decode\"; // Corrected named import\r\n\r\nconst Profile = () => {\r\n  const navigate = useNavigate();\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const checkUser = async () => {\r\n      const token = localStorage.getItem(\"token\");\r\n      if (!token) {\r\n        alert(\"Please log in first\");\r\n        navigate(\"/login\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // Decode JWT token to get user role\r\n        const decoded = jwtDecode(token);\r\n        setUser(decoded);\r\n\r\n        // Fetch user details from the backend\r\n        const userRes = await axios.get(\"http://localhost:5000/api/auth/user\", {\r\n          headers: { Authorization: token },\r\n        });\r\n\r\n        // Redirect based on role\r\n        if (userRes.data.role === \"admin\") {\r\n          navigate(\"//admin-dashboard\");\r\n        } else {\r\n          navigate(\"/user-dashboard\");\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Invalid token or session expired\", err);\r\n        alert(\"Session expired, please log in again\");\r\n        localStorage.removeItem(\"token\");\r\n        navigate(\"/login\");\r\n      }\r\n    };\r\n\r\n    checkUser();\r\n  }, [navigate]);\r\n\r\n  return <h2>Redirecting...</h2>;\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE;QACVG,KAAK,CAAC,qBAAqB,CAAC;QAC5BP,QAAQ,CAAC,QAAQ,CAAC;QAClB;MACF;MAEA,IAAI;QACF;QACA,MAAMQ,OAAO,GAAGb,SAAS,CAACS,KAAK,CAAC;QAChCF,OAAO,CAACM,OAAO,CAAC;;QAEhB;QACA,MAAMC,OAAO,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,qCAAqC,EAAE;UACrEC,OAAO,EAAE;YAAEC,aAAa,EAAER;UAAM;QAClC,CAAC,CAAC;;QAEF;QACA,IAAIK,OAAO,CAACI,IAAI,CAACC,IAAI,KAAK,OAAO,EAAE;UACjCd,QAAQ,CAAC,mBAAmB,CAAC;QAC/B,CAAC,MAAM;UACLA,QAAQ,CAAC,iBAAiB,CAAC;QAC7B;MACF,CAAC,CAAC,OAAOe,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,kCAAkC,EAAEF,GAAG,CAAC;QACtDR,KAAK,CAAC,sCAAsC,CAAC;QAC7CF,YAAY,CAACa,UAAU,CAAC,OAAO,CAAC;QAChClB,QAAQ,CAAC,QAAQ,CAAC;MACpB;IACF,CAAC;IAEDG,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACH,QAAQ,CAAC,CAAC;EAEd,oBAAOH,OAAA;IAAAsB,QAAA,EAAI;EAAc;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAChC,CAAC;AAACxB,EAAA,CAzCID,OAAO;EAAA,QACML,WAAW;AAAA;AAAA+B,EAAA,GADxB1B,OAAO;AA2Cb,eAAeA,OAAO;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}